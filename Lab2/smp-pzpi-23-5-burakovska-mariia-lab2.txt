  МІНІСТЕРСТВО ОСВІТИ І НАУКИ УКРАЇНИ
ХАРКІВСЬКИЙ НАЦІОНАЛЬНИЙ УНІВЕРСИТЕТ РАДІОЕЛЕКТРОНІКИ
КАФЕДРА ПРОГРАМНОЇ ІНЖЕНЕРІЇ







Звіт
з лабораторної роботи № 2 з дисципліни
Скриптові мови програмування
   





Виконала:                                                                 Перевірив:
ст. гр. ПЗПІ-23-5                        			ст. викладач кафедри ПІ
Бураковська Марія					Сокорчук Ігор Петрович







Харків 2025

1 ІСТОРІЯ ЗМІН
№ДатаВерсія звітуОпис змін та виправлень110.06.20250.1Початкова версія


2 ЗАВДАННЯ
     Потрібно створити консольний застосунок «Продовольчий магазин "Весна"». Програма після запуску повинна вивести на термінал перелік можливих дій:

######################################
# ПРОДОВОЛЬЧИЙ МАГАЗИН "ВЕСНА" #
######################################
1 Вибрати товари
2 Отримати підсумковий рахунок
3 Налаштувати свій профіль
0 Вийти з програми
Введіть команду: _
     Далі програма очікує введення значення з клавіатури. Якщо користувач вводить число, якого немає в списку можливих команд, необхідно вивести повідомлення про помилку і запропонувати користувачу ввести інше число:
Введіть команду: 4
ПОМИЛКА! Введіть правильну команду
1 Вибрати товари
2 Отримати підсумковий рахунок
3 Налаштувати свій профіль
0 Вийти з програми
Введіть команду: _
     Щоб розпочати купувати товари, необхідно ввести число «1», після чого користувач повинен потрапити в режим закупівлі товарів.
     На екрані має з’явитися перелік продуктів, де кожен рядок складається з номера, назви товару і його вартості, наприклад:

Введіть команду: 1
№  НАЗВА                 		ЦІНА
1  Молоко пастеризоване  	12
2  Хліб чорний           		9
3  Сир білий            		21
4  Сметана 20%           		25
5  Кефір 1%              		19
6  Вода газована         		18
7  Печиво "Весна"        		14
   -----------
0  ПОВЕРНУТИСЯ
Виберіть товар: _
     Щоб купити товар, необхідно ввести його номер.
     Після успішної перевірки на існування номера товару в списку, програма має попросити ввести кількість товару:

Виберіть товар: 2
Вибрано: Хліб чорний
Введіть кількість, штук: 1
У КОШИКУ:
НАЗВА        	КІЛЬКІСТЬ
Хліб чорний  	1
     Якщо номер товару і його кількість (менше 100 шт.) були вказані коректно, то товар додається в кошик.
     Якщо вказано кількість «0», то товар видаляється з кошика:

Виберіть товар: 2
Вибрано: Хліб чорний
Введіть кількість, штук: 0
ВИДАЛЯЮ З КОШИКА
КОШИК ПОРОЖНІЙ
     Далі знову відображається перелік товарів і пропонується купити наступний товар.
     Якщо номер товару вказано неправильно, виводиться сповіщення про помилку, нову виводиться перелік товарів:

№  НАЗВА                 ЦІНА
1  Молоко пастеризоване  12
2  Хліб чорний           9
3  Сир білий             21
4  Сметана 20%           25
5  Кефір 1%              19
6  Вода газована         18
7  Печиво "Весна"        14
   -----------
0  ПОВЕРНУТИСЯ
Виберіть товар: 8
ПОМИЛКА! ВКАЗАНО НЕПРАВИЛЬНИЙ НОМЕР ТОВАРУ
     Щоб завершити купувати товари і перейти до попереднього меню, необхідно ввести з клавіатури цифру «0». Щоб отримати підсумковий рахунок, потрібно ввести число «2». Рахунок має містити таку інформацію: №, назва, ціна товару, кількість товару, вартість товару. 
     У кінці чека має бути: РАЗОМ ДО CПЛАТИ: сума_за_всі_товари
Наприклад:
Введіть команду: 2
№  НАЗВА                 		ЦІНА  КІЛЬКІСТЬ  ВАРТІСТЬ
1  Печиво "Весна"        		14    	1          	        14
2  Молоко пастеризоване  	12    	2                   24
3  Сметана 20%           		25    	1                   25
4  Хліб чорний          		9     	1          	        9
РАЗОМ ДО CПЛАТИ: 72
     Щоб встановити свій профіль потрібно, ввести число «3», після чого програма попросить ввести ваше ім'я та ваш вік:
 
Ваше ім?я: _
Ваш вік: _
     Ім?я користувача не може бути порожнім і повинно містити хоча б одну літеру. 
     Користувач не може бути молодшим 7-ми або старшим 150-ти років.
     Щоб завершити роботу та вийти з програми, потрібно ввести число «0». 
     У програмі потрібно перевіряти інформацію, яку вводить користувач, а саме:
* обраний пункт меню існує;
* обраний товар існує;
* введена кількість товару більша нуля;
* ім?я користувача містить хча б одну літеру;
* вік користувача становить від 7-ми до 150-ти років.


3 ОПИС ВИКОНАНОЇ РОБОТИ 
     У ході виконання роботи було створено консольну PHP-програму, яка моделює роботу продуктового магазину. Клас GroceryStore реалізує основну бізнес-логіку: взаємодію з користувачем через меню, вибір товарів, обчислення підсумкової вартості, а також збереження профілю користувача.
     Програма реалізована у вигляді класу GroceryStore, який містить приватні змінні:
– $products — асоціативний масив із назвами товарів та цінами;
– $cart — кошик користувача;
– $userName, $userAge — профіль користувача.
     Метод run():
     Це головний цикл програми, що реалізує нескінченний цикл з меню. Залежно від введеної команди викликається одна з трьох дій: вибір товарів (selectProducts()), перегляд рахунку (showReceipt()), налаштування профілю (setupProfile()), або вихід із програми.
     Меню:
     Методи showMainMenu() та showError() відображають відповідно основне меню та повідомлення про помилку при неправильному введенні.
     Вибір товарів:
     Метод selectProducts() реалізує логіку вибору товарів:
– Виводиться список доступних товарів через showProductList().
– Користувач вводить номер товару, після чого вводить кількість.
– Якщо кількість = 0, товар видаляється з кошика.
– Якщо кількість > 0, товар додається або оновлюється у кошику.
– Кожна зміна супроводжується відображенням вмісту кошика через showCart().
     Список товарів:
     Метод showProductList() формує таблицю з номерами товарів, назвами (вирівняними за допомогою функції mb_str_pad) та цінами.
     Перегляд кошика:
     Метод showCart() показує поточний вміст кошика користувача. Він аналогічний до виводу товарів, але замість ціни показується кількість.
     Підсумковий рахунок:
     Метод showReceipt() формує фінальний рахунок:
– Виводиться таблиця з усіма товарами в кошику, включаючи назву, ціну, кількість та підсумкову вартість.
– Обчислюється загальна сума до сплати.
     Налаштування профілю:
     Метод setupProfile() дозволяє користувачу ввести своє ім’я та вік:
– Ім’я повинно містити хоча б одну літеру (перевіряється регулярним виразом).
– Вік повинен бути у межах від 7 до 150.
– Після вдалого введення дані зберігаються у глобальні змінні $userName та $userAge.
     Ввід даних:
     Метод getInput() зчитує рядок з консолі (STDIN), обрізає пробіли і перекодовує його з CP866 у UTF-8. Це забезпечує коректне введення навіть у терміналах Windows.
     Функція вирівнювання рядків:
     Функція mb_str_pad() вирівнює багатобайтові рядки (наприклад, українські символи), оскільки стандартна str_pad() не підтримує багатобайтову довжину. Вона додає пробіли справа, зліва або по обидва боки залежно від параметра $pad_type.



4 ВИСНОВКИ
     У ході виконання лабораторної роботи №2 було розроблено консольну програму «Продовольчий магазин "Весна"» з використанням мови програмування PHP. Програма дозволяє користувачеві взаємодіяти з інтерфейсом через текстове меню, вибирати товари, формувати кошик, переглядати підсумковий рахунок та налаштовувати власний профіль.
Було реалізовано повний цикл обробки користувацького вводу: перевірку коректності команд меню, валідацію номера товару, кількості одиниць товару, а також правильності введення імені й віку. Програма передбачає всі основні сценарії взаємодії з користувачем, включаючи вивід помилок та оновлення кошика. Під час розробки було закріплено практичні навички роботи з асоціативними масивами та багатовимірними структурами, реалізації нескінченного циклу з меню, обробки введення з клавіатури, форматування тексту з урахуванням багатобайтового кодування (UTF-8), створення функцій для повторного використання логіки.


ДОДАТОК А
https://youtu.be/NMJB46_dacc
00:00 - Вступ 
00:26 - Початок пояснення коду. Встановлення кодування та локалізації. 
00:38 - Оголошення класу GroceryStore. 
1:26 - Метод run(). 
1:51 - Метод showMainMenu(). 
2:02 - Метод showError(). 
2:13 - Метод selectProducts(). 
3:43 - Метод showProductList(). 
4:04 - Метод showCart(). 
4:15 - Метод showReceipt(). 
4:41 - Метод setupProfile(). 
5:32 - Метод getInput(). 
5:52 - Метод mb_str_pad(). 
6:18 - Створення об'єкту для запуску програми. 
6:30 - Демонстрація роботи програми.

ДОДАТОК Б

 
Рисунок Б.1 – Демонстрація результату роботи програми, головна сторінка.


Рисунок Б.2 – Демонстрація результату роботи програми, сторінка вибору продуктів.


Рисунок Б.3 – Демонстрація результату роботи програми, сторінка з підсумковим рахунком.


Рисунок Б.4 – Демонстрація результату роботи програми, сторінка налаштування профілю.


Рисунок Б.5 – Демонстрація результату роботи програми,вихід з програми.


ДОДАТОК В
1 <?php
 2 mb_internal_encoding("UTF-8");
 3 setlocale(LC_ALL, 'uk_UA.UTF-8');
 4 
 5 class GroceryStore {
 6     private $products = [
 7         1 => ['name' => 'Молоко пастеризоване', 'price' => 12],
 8         2 => ['name' => 'Хліб чорний',       'price' => 9],
 9         3 => ['name' => 'Сир білий',         'price' => 21],
10         4 => ['name' => 'Сметана 20%',       'price' => 25],
11         5 => ['name' => 'Кефір 1%',          'price' => 19],
12         6 => ['name' => 'Вода газована',     'price' => 18],
13         7 => ['name' => 'Печиво "Весна"',    'price' => 14]
14     ];
15 
16     private $cart     = [];
17     private $userName = '';
18     private $userAge  = 0;
19 
20     public function run() {
21         while (true) {
22             $this->showMainMenu();
23             $command = $this->getInput();
24 
25             switch ($command) {
26                 case '1':
27                     $this->selectProducts();
28                     break;
29                 case '2':
30                     $this->showReceipt();
31                     break;
32                 case '3':
33                     $this->setupProfile();
34                     break;
35                 case '0':
36                     echo "До побачення!\n";
37                     return;
38                 default:
39                     $this->showError();
40             }
41         }
42     }
43 
44     private function showMainMenu() {
45         echo "\n################################\n";
46         echo "# ПРОДОВОЛЬЧИЙ МАГАЗИН \"ВЕСНА\" #\n";
47         echo "################################\n";
48         echo "1 Вибрати товари\n";
49         echo "2 Отримати підсумковий рахунок\n";
50         echo "3 Налаштувати свій профіль\n";
51         echo "0 Вийти з програми\n";
52         echo "Введіть команду: ";
53     }
54 
55     private function showError() {
56         echo "ПОМИЛКА! Введіть правильну команду\n";
57         echo "1 Вибрати товари\n";
58         echo "2 Отримати підсумковий рахунок\n";
59         echo "3 Налаштувати свій профіль\n";
60         echo "0 Вийти з програми\n";
61         echo "Введіть команду: ";
62     }
63 
64     private function selectProducts() {
65         while (true) {
66             $this->showProductList();
67             $productId = $this->getInput();
68 
69             if ($productId === '0') {
70                 break;
71             }
72 
73             if (!isset($this->products[$productId])) {
74                 echo "ПОМИЛКА! ВКАЗАНО НЕПРАВИЛЬНИЙ НОМЕР ТОВАРУ\n\n";
75                 continue;
76             }
77 
78             $product = $this->products[$productId];
79             echo "Вибрано: " . $product['name'] . "\n";
80             echo "Введіть кількість, штук: ";
81 
82             $quantity = (int)$this->getInput();
83 
84             if ($quantity < 0 || $quantity >= 100) {
85                 echo "ПОМИЛКА! Кількість повинна бути від 0 до 99\n";
86                 continue;
87             }
88 
89             if ($quantity === 0) {
90                 if (isset($this->cart[$productId])) {
91                     unset($this->cart[$productId]);
92                     echo "ВИДАЛЯЮ З КОШИКА\n";
93                 }
94                 if (empty($this->cart)) {
95                     echo "КОШИК ПОРОЖНІЙ\n";
96                 }
97             } else {
98                 $this->cart[$productId] = [
99                     'name'     => $product['name'],
100                    'price'    => $product['price'],
101                    'quantity' => $quantity
102                ];
103                $this->showCart();
104            }
105        }
106    }
107 
108    private function showProductList() {
109        echo "\n№  НАЗВА                       ЦІНА\n";
110        foreach ($this->products as $id => $product) {
111            printf("%-2d %-27s %d\n", $id, $this->mb_str_pad($product['name'], 27), $product['price']);
112        }
113        echo "   -----------\n";
114        echo "0  ПОВЕРНУТИСЯ\n";
115        echo "Виберіть товар: ";
116    }
117 
118    private function showCart() {
119        echo "У КОШИКУ:\n";
120        echo "НАЗВА                       КІЛЬКІСТЬ\n";
121        foreach ($this->cart as $item) {
122            printf("%-27s %d\n", $this->mb_str_pad($item['name'], 27), $item['quantity']);
123        }
124    }
125 
126    private function showReceipt() {
127        if (empty($this->cart)) {
128            echo "\nКОШИК ПОРОЖНІЙ\n";
129            return;
130        }
131 
132        echo "\n№  НАЗВА                       ЦІНА  КІЛЬКІСТЬ  ВАРТІСТЬ\n";
133        $total   = 0;
134        $counter = 1;
135 
136        foreach ($this->cart as $item) {
137            $cost  = $item['price'] * $item['quantity'];
138            $total += $cost;
139 
140            $name = $this->mb_str_pad($item['name'], 27);
141            printf("%-2d %s %5d %9d %9d\n",
142                $counter++, $name, $item['price'], $item['quantity'], $cost);
143        }
144 
145        echo "РАЗОМ ДО СПЛАТИ: $total\n";
146    }
147 
148    function setupProfile() {
149        global $userName, $userAge, $MIN_AGE, $MAX_AGE;
150 
151        while (true) {
152            $name = trim(readline("Ваше ім'я: "));
153 
154            if (empty($name) || !preg_match('/[a-zA-Zа-яА-ЯіІїЇєЄґҐ]/u', $name)) {
155                echo "ПОМИЛКА! Ім'я повинно містити хоча б одну літеру\n";
156                continue;
157            }
158 
159            $userName = $name;
160            break;
161        }
162 
163        while (true) {
164            echo "Ваш вік: ";
165            $age = (int)$this->getInput();
166 
167            if ($age < 7 || $age > 150) {
168                echo "ПОМИЛКА! Вік повинен бути від 7 до 150 років\n";
169                return;
170            }
171            $userAge = $age;
172            break;
173        }
174 
175        echo "\n";
176        echo "Профіль збережено: " . $name . ", " . $age . " років\n";
177        echo "\n";
178    }
179 
180    private function getInput(): string {
181        $raw = fgets(STDIN);
182        if ($raw === false) {
183            return '';
184        }
185 
186        $trimmed = trim($raw);
187        return mb_convert_encoding($trimmed, 'UTF-8', 'CP866');
188    }
189 
190    private function mb_str_pad($input, $pad_length, $pad_string = " ", $pad_type = STR_PAD_RIGHT, $encoding = "UTF-8") {
191        $length  = mb_strlen($input, $encoding);
192        $padding = $pad_length - $length;
193        if ($padding <= 0) return $input;
194 
195        switch ($pad_type) {
196            case STR_PAD_RIGHT:
197                return $input . str_repeat($pad_string, $padding);
198            case STR_PAD_LEFT:
199                return str_repeat($pad_string, $padding) . $input;
200            case STR_PAD_BOTH:
201                $left  = floor($padding / 2);
202                $right = $padding - $left;
203                return str_repeat($pad_string, $left) . $input . str_repeat($pad_string, $right);
204            default:
205                return $input;
206        }
207    }
208 }
209 
210 $store = new GroceryStore();
211 $store->run();
2


